// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../prisma-client" // Output the client to the database folder
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//  id        Int     @id @default(autoincrement())
//  email     String  @unique
//  password  String
//  created_at DateTime @default(now())
//  updated_at DateTime @updatedAt
// }

model User {
  id            Int      @id @default(autoincrement())
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  order_id      Int?
  restaurant_id Int?
  payment_id    Int?
  email         String   @unique
  password      String
  name          String
  userType      String   // e.g., "customer", "driver"
  address       Address[]
}

model Address {
  id      Int    @id @default(autoincrement())
  user_id Int
  street  String
  city    String
  state   String
  zip     String
  user    User   @relation(fields: [user_id], references: [id])
}

model Order {
  id             Int      @id @default(autoincrement())
  customer_id    String
  restaurant_id  String
  address_id     String
  orderTotal     Float
  status         String   @default("P")
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // Define relation to OrderItem
  items           OrderItem[]  @relation("OrderItems")

  // Define relation to Address
//  address         Address       @relation(fields: [address_id], references: [id])
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order_id  Int
  name      String
  quantity  Int
  price     Float

  // Define relation to Order
  order     Order    @relation("OrderItems", fields: [order_id], references: [id])
}

model Payment {
  id             Int     @id @default(autoincrement())
  order_id       String
  restaurant_id  String
  customer_id    String
  amount         Float
  status         String
  paymentMethodId String  // Token or ID for the payment method
  cardEnding     String  // e.g., "1234"
  cardType       String  // e.g., "Visa"
}